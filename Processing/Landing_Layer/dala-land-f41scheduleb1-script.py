import sys
import boto3
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job

## @params: [JOB_NAME]
args = getResolvedOptions(sys.argv, ['JOB_NAME', 'src_database', 'src_main_name', 'tgt_bucket'])
p_src_database = args['src_database']
p_main_src_name = args['src_main_name']
p_src_table_name = "land_" + args['src_main_name']
p_tgt_bucket = args['tgt_bucket']
p_tgt_path = "s3://" + p_tgt_bucket + "/" + p_main_src_name

		
#Spark, Glue, Init job		
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
job.init(args['JOB_NAME'], args)

#purge terget locations older than 0 hour
#Attempting to purge S3 path with retention set to 0.
glueContext.purge_s3_path(s3_path = p_tgt_path, options={"retentionPeriod": 0} )

## @type: DataSource
## @args: [database = p_src_database, table_name = p_src_table_name, transformation_ctx = "datasource0"]
## @return: datasource0
## @inputs: []
datasource0 = glueContext.create_dynamic_frame.from_catalog(database = p_src_database, table_name = p_src_table_name, transformation_ctx = "datasource0")

## @type: ApplyMapping
## @args: [mapping = [("cash", "double", "cash", "double"), ("short_term_inv", "double", "short_term_inv", "double"), ("notes_receivable", "double", "notes_receivable", "double"), ("accts_receivable", "double", "accts_receivable", "double"), ("accts_not_collect", "double", "accts_not_collect", "double"), ("notes_acc_rec_net", "double", "notes_acc_rec_net", "double"), ("parts_supplies_net", "double", "parts_supplies_net", "double"), ("prepaid_items", "double", "prepaid_items", "double"), ("curr_assets_oth", "double", "curr_assets_oth", "double"), ("curr_assets", "double", "curr_assets", "double"), ("invest_assoc_comp", "double", "invest_assoc_comp", "double"), ("invest_rec_oth", "double", "invest_rec_oth", "double"), ("special_funds", "double", "special_funds", "double"), ("invest_spec_funds", "double", "invest_spec_funds", "double"), ("flight_equip", "double", "flight_equip", "double"), ("prop_equip_ground", "double", "prop_equip_ground", "double"), ("depr_pr_eq_ground", "double", "depr_pr_eq_ground", "double"), ("prop_equip_net", "double", "prop_equip_net", "double"), ("land", "double", "land", "double"), ("equip_dep_adv_pay", "double", "equip_dep_adv_pay", "double"), ("construction", "double", "construction", "double"), ("leased_prop_cap", "double", "leased_prop_cap", "double"), ("leased_prop_acc", "double", "leased_prop_acc", "double"), ("prop_equip", "double", "prop_equip", "double"), ("prop_equip_non_op", "double", "prop_equip_non_op", "double"), ("depr_pr_eq_non_op", "double", "depr_pr_eq_non_op", "double"), ("prop_equip_no_tot", "double", "prop_equip_no_tot", "double"), ("pre_pay_long_term", "double", "pre_pay_long_term", "double"), ("non_amort_dev", "double", "non_amort_dev", "double"), ("assets_oth_def", "double", "assets_oth_def", "double"), ("assets_other", "double", "assets_other", "double"), ("assets", "double", "assets", "double"), ("long_debt_cur_mat", "double", "long_debt_cur_mat", "double"), ("notes_pay_banks", "double", "notes_pay_banks", "double"), ("notes_pay_other", "double", "notes_pay_other", "double"), ("accts_pay_trade", "double", "accts_pay_trade", "double"), ("accts_pay_other", "double", "accts_pay_other", "double"), ("curr_ob_cap_lease", "double", "curr_ob_cap_lease", "double"), ("accr_salaries", "double", "accr_salaries", "double"), ("accr_vacation", "double", "accr_vacation", "double"), ("accr_interest", "double", "accr_interest", "double"), ("accr_taxes", "double", "accr_taxes", "double"), ("dividends", "double", "dividends", "double"), ("liab_air_traffic", "double", "liab_air_traffic", "double"), ("curr_liab_oth", "double", "curr_liab_oth", "double"), ("curr_liabilities", "double", "curr_liabilities", "double"), ("long_term_debt", "double", "long_term_debt", "double"), ("adv_assoc_comp", "double", "adv_assoc_comp", "double"), ("pension_liab", "double", "pension_liab", "double"), ("non_rec_ob_cap_ls", "double", "non_rec_ob_cap_ls", "double"), ("non_rec_liab_oth", "double", "non_rec_liab_oth", "double"), ("non_rec_liab", "double", "non_rec_liab", "double"), ("def_taxes", "double", "def_taxes", "double"), ("def_tax_credits", "double", "def_tax_credits", "double"), ("def_credits_oth", "double", "def_credits_oth", "double"), ("def_credits", "double", "def_credits", "double"), ("pf_shares", "double", "pf_shares", "double"), ("pf_shares_num", "double", "pf_shares_num", "double"), ("com_shares", "double", "com_shares", "double"), ("unissued_stock", "double", "unissued_stock", "double"), ("capital_stock", "double", "capital_stock", "double"), ("add_capital_inv", "double", "add_capital_inv", "double"), ("paid_in_capital", "double", "paid_in_capital", "double"), ("ret_earnings", "double", "ret_earnings", "double"), ("sh_hld_equity", "double", "sh_hld_equity", "double"), ("treas_stock_num", "double", "treas_stock_num", "double"), ("sh_hld_equit_net", "double", "sh_hld_equit_net", "double"), ("liab_sh_hld_equity", "double", "liab_sh_hld_equity", "double"), ("airline_id", "long", "airline_id", "string"), ("unique_carrier", "string", "unique_carrier", "string"), ("unique_carrier_name", "string", "unique_carrier_name", "string"), ("carrier", "string", "carrier", "string"), ("carrier_name", "string", "carrier_name", "string"), ("unique_carrier_entity", "string", "unique_carrier_entity", "string"), ("region", "string", "region", "string"), ("carrier_group_new", "long", "carrier_group_new", "string"), ("carrier_group", "long", "carrier_group", "string"), ("year", "long", "year", "string"), ("quarter", "long", "quarter", "string")], transformation_ctx = "applymapping1"]
## @return: applymapping1
## @inputs: [frame = datasource0]
applymapping1 = ApplyMapping.apply(frame = datasource0, mappings = [("cash", "double", "cash", "double"), ("short_term_inv", "double", "short_term_inv", "double"), ("notes_receivable", "double", "notes_receivable", "double"), ("accts_receivable", "double", "accts_receivable", "double"), ("accts_not_collect", "double", "accts_not_collect", "double"), ("notes_acc_rec_net", "double", "notes_acc_rec_net", "double"), ("parts_supplies_net", "double", "parts_supplies_net", "double"), ("prepaid_items", "double", "prepaid_items", "double"), ("curr_assets_oth", "double", "curr_assets_oth", "double"), ("curr_assets", "double", "curr_assets", "double"), ("invest_assoc_comp", "double", "invest_assoc_comp", "double"), ("invest_rec_oth", "double", "invest_rec_oth", "double"), ("special_funds", "double", "special_funds", "double"), ("invest_spec_funds", "double", "invest_spec_funds", "double"), ("flight_equip", "double", "flight_equip", "double"), ("prop_equip_ground", "double", "prop_equip_ground", "double"), ("depr_pr_eq_ground", "double", "depr_pr_eq_ground", "double"), ("prop_equip_net", "double", "prop_equip_net", "double"), ("land", "double", "land", "double"), ("equip_dep_adv_pay", "double", "equip_dep_adv_pay", "double"), ("construction", "double", "construction", "double"), ("leased_prop_cap", "double", "leased_prop_cap", "double"), ("leased_prop_acc", "double", "leased_prop_acc", "double"), ("prop_equip", "double", "prop_equip", "double"), ("prop_equip_non_op", "double", "prop_equip_non_op", "double"), ("depr_pr_eq_non_op", "double", "depr_pr_eq_non_op", "double"), ("prop_equip_no_tot", "double", "prop_equip_no_tot", "double"), ("pre_pay_long_term", "double", "pre_pay_long_term", "double"), ("non_amort_dev", "double", "non_amort_dev", "double"), ("assets_oth_def", "double", "assets_oth_def", "double"), ("assets_other", "double", "assets_other", "double"), ("assets", "double", "assets", "double"), ("long_debt_cur_mat", "double", "long_debt_cur_mat", "double"), ("notes_pay_banks", "double", "notes_pay_banks", "double"), ("notes_pay_other", "double", "notes_pay_other", "double"), ("accts_pay_trade", "double", "accts_pay_trade", "double"), ("accts_pay_other", "double", "accts_pay_other", "double"), ("curr_ob_cap_lease", "double", "curr_ob_cap_lease", "double"), ("accr_salaries", "double", "accr_salaries", "double"), ("accr_vacation", "double", "accr_vacation", "double"), ("accr_interest", "double", "accr_interest", "double"), ("accr_taxes", "double", "accr_taxes", "double"), ("dividends", "double", "dividends", "double"), ("liab_air_traffic", "double", "liab_air_traffic", "double"), ("curr_liab_oth", "double", "curr_liab_oth", "double"), ("curr_liabilities", "double", "curr_liabilities", "double"), ("long_term_debt", "double", "long_term_debt", "double"), ("adv_assoc_comp", "double", "adv_assoc_comp", "double"), ("pension_liab", "double", "pension_liab", "double"), ("non_rec_ob_cap_ls", "double", "non_rec_ob_cap_ls", "double"), ("non_rec_liab_oth", "double", "non_rec_liab_oth", "double"), ("non_rec_liab", "double", "non_rec_liab", "double"), ("def_taxes", "double", "def_taxes", "double"), ("def_tax_credits", "double", "def_tax_credits", "double"), ("def_credits_oth", "double", "def_credits_oth", "double"), ("def_credits", "double", "def_credits", "double"), ("pf_shares", "double", "pf_shares", "double"), ("pf_shares_num", "double", "pf_shares_num", "double"), ("com_shares", "double", "com_shares", "double"), ("unissued_stock", "double", "unissued_stock", "double"), ("capital_stock", "double", "capital_stock", "double"), ("add_capital_inv", "double", "add_capital_inv", "double"), ("paid_in_capital", "double", "paid_in_capital", "double"), ("ret_earnings", "double", "ret_earnings", "double"), ("sh_hld_equity", "double", "sh_hld_equity", "double"), ("treas_stock_num", "double", "treas_stock_num", "double"), ("sh_hld_equit_net", "double", "sh_hld_equit_net", "double"), ("liab_sh_hld_equity", "double", "liab_sh_hld_equity", "double"), ("airline_id", "long", "airline_id", "string"), ("unique_carrier", "string", "unique_carrier", "string"), ("unique_carrier_name", "string", "unique_carrier_name", "string"), ("carrier", "string", "carrier", "string"), ("carrier_name", "string", "carrier_name", "string"), ("unique_carrier_entity", "string", "unique_carrier_entity", "string"), ("region", "string", "region", "string"), ("carrier_group_new", "long", "carrier_group_new", "string"), ("carrier_group", "long", "carrier_group", "string"), ("year", "long", "year", "string"), ("quarter", "long", "quarter", "string")], transformation_ctx = "applymapping1")

## @type: DataSink
## @args: [connection_type = "s3", connection_options = {"path": p_tgt_path }, format = "parquet", transformation_ctx = "datasink3"]
## @return: datasink3
## @inputs: [frame = applymapping1]
datasink3 = glueContext.write_dynamic_frame.from_options(frame = applymapping1, connection_type = "s3", connection_options = {"path": p_tgt_path}, format = "parquet", transformation_ctx = "datasink3")
job.commit()